name: scientific
version: 0.3.3.8
id: scientific-0.3.3.8-52e537728c712d98fb7af7e7549f202c
key: scien_LdcrmPB2O4c97oDeSIOeEj
license: BSD3
maintainer: Bas van Dijk <v.dijk.bas@gmail.com>
homepage: https://github.com/basvandijk/scientific
synopsis: Numbers represented using scientific notation
description:
    @Data.Scientific@ provides a space efficient and arbitrary precision
    scientific number type.
    .
    'Scientific' numbers are represented using
    <http://en.wikipedia.org/wiki/Scientific_notation scientific notation>. It
    uses a coefficient @c :: 'Integer'@ and a base-10 exponent @e :: 'Int'@ (do
    note that since we're using an 'Int' to represent the exponent these numbers
    aren't truly arbitrary precision). A scientific number corresponds to the
    'Fractional' number: @'fromInteger' c * 10 '^^' e@.
    .
    The main application of 'Scientific' is to be used as the target of parsing
    arbitrary precision numbers coming from an untrusted source. The advantages
    over using 'Rational' for this are that:
    .
    * A 'Scientific' is more efficient to construct. Rational numbers need to be
    constructed using '%' which has to compute the 'gcd' of the 'numerator' and
    'denominator'.
    .
    * 'Scientific' is safe against numbers with huge exponents. For example:
    @1e1000000000 :: 'Rational'@ will fill up all space and crash your
    program. Scientific works as expected:
    .
    > > read "1e1000000000" :: Scientific
    > 1.0e1000000000
    .
    * Also, the space usage of converting scientific numbers with huge exponents to
    @'Integral's@ (like: 'Int') or @'RealFloat's@ (like: 'Double' or 'Float')
    will always be bounded by the target type.
category: Data
author: Bas van Dijk
exposed: True
exposed-modules:
    Data.Scientific Data.Text.Lazy.Builder.Scientific
    Data.ByteString.Builder.Scientific
hidden-modules: Math.NumberTheory.Logarithms
trusted: False
import-dirs: /home/cmotoche/Documents/haskell/scotty/.cabal-sandbox/lib/x86_64-linux-ghc-7.10.1/scientific-0.3.3.8-LdcrmPB2O4c97oDeSIOeEj
library-dirs: /home/cmotoche/Documents/haskell/scotty/.cabal-sandbox/lib/x86_64-linux-ghc-7.10.1/scientific-0.3.3.8-LdcrmPB2O4c97oDeSIOeEj
data-dir: /home/cmotoche/Documents/haskell/scotty/.cabal-sandbox/share/x86_64-linux-ghc-7.10.1/scientific-0.3.3.8
hs-libraries: HSscientific-0.3.3.8-LdcrmPB2O4c97oDeSIOeEj
depends:
    array-0.5.1.0-e29cdbe82692341ebb7ce6e2798294f9
    base-4.8.0.0-1b689eb8d72c4d4cc88f445839c1f01a
    bytestring-0.10.6.0-0909f8f31271f3d75749190bf2ee35db
    deepseq-1.4.1.1-c1376f846fa170f2cc2cb2e57b203339
    ghc-prim-0.4.0.0-7c945cc0c41d3b7b70f3edd125671166
    hashable-1.2.3.3-96bb31205ab731b6511be7f5882cf0f4
    integer-gmp-1.0.0.0-3c947e5fb6dca14804d9b2793c521b67
    text-1.2.1.3-6162dc2585c3db95d57ac014d2171e07
haddock-interfaces: /home/cmotoche/Documents/haskell/scotty/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.10.1/scientific-0.3.3.8/html/scientific.haddock
haddock-html: /home/cmotoche/Documents/haskell/scotty/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.10.1/scientific-0.3.3.8/html
